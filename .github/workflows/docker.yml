name: Docker Build Master
on:
  push:
    branches-ignore:
      - 'dependabot/**'
  schedule:
    - cron: '0 5 * * *'

jobs:
  DockerHub:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2

      - uses: FranzDiebold/github-env-vars-action@v2.7.0
      - name: Print environment variables
        run: |
          echo "CI_REPOSITORY_NAME=$CI_REPOSITORY_NAME"

      - name: Prepare DockerHub
        id: prep
        run: |
          REPO=$CI_REPOSITORY_NAME
          DOCKER_IMAGE=${{ secrets.DOCKER_USER }}/${REPO}
          if [ "$CI_REF_NAME" != "dev" ]; then
            VERSION=latest
          else
            VERSION=latest
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=title::${GITHUB_REPOSITORY}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=date::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
        with:
          platforms: linux/amd64,linux/armhf,linux/arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: Cache Docker layers
        uses: actions/cache@v3.3.1
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.1.0 
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push DockerHub
        id: docker_build
        uses: docker/build-push-action@v4.0.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/armhf,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.title=${{ steps.prep.outputs.title }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.date }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      # - name: Docker Hub Description
        # uses: peter-evans/dockerhub-description@v3.4.1
          # with:
          # username: ${{ secrets.DOCKER_USER }}
          # password: ${{ secrets.DOCKER_PASS }}
          # repository: ${{ secrets.DOCKER_USER }}/uploaderv2
          # readme-filepath: ./README.md

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


  GHRC:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2

      - uses: FranzDiebold/github-env-vars-action@v2.7.0
      - name: Print environment variables
        run: |
          REPO=$CI_REPOSITORY_NAME

      - name: Prepare GHRC
        id: prep
        run: |
          REPO=$CI_REPOSITORY_NAME
          DOCKER_IMAGE=${{ github.repository_owner }}/${REPO}
          if [ "$CI_REF_NAME" != "dev" ]; then
            VERSION=latest
          else
            VERSION=latest
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=title::${GITHUB_REPOSITORY}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=date::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
        with:
          platforms: linux/amd64,linux/armhf,linux/arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: Cache Docker layers
        uses: actions/cache@v3.3.1
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push DockerHub
        id: docker_build
        uses: docker/build-push-action@v4.0.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/armhf,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.title=${{ steps.prep.outputs.title }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.date }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
